npage for _printf().
.\" Contact Steven or Joann for corrections.
.TH man _printf "19 June 2017" "1.0" "Holberton School _printf function"
.SH NAME
_printf - this function is meant to emulate printf, and will format and print user provided data to standard output.

.SH SYNOPSIS
.B #include "holberton.h"

.B int _print_mod(va_list list);

.B int _print_string(va_list list);

.B int _print_char(va_list list);

.B int _print_d_i(va_list list);

.B int _printf(const char *format, ...);

.B #include <stdarg.h>

.B #include <unistd.h>

.B #include <stdlib.h>

.B #include <stdio.h>

.SH DESCRIPTION
.B _printf("%", variable)
.PP
The function _printf will print output according to the format described below. Output is written to std out.
.PP
This function writes the output under the control of a format string that specifies how subsequent arguments (or arguments accessed via the
variable-length argument facilities of stdarg(3)) are converted for output.

.B Return value
.PP
If the return is successful, _printf will return the number of characters printed (not including the null byte used to end output to strings).
.PP
_printf will return a negative value if an error is encountered.

.B Format of the format string
.PP
The format string is a character string, composed of zero or more Directives: ordinary characters (not %) that are copied unchanged to the output stream, and the conver\
sion specifier which calls on subsequent arguments. Each conversion begins the character %, and ends with a specifier.
.PP
The arguments must be entered in the correct order, according to the conversion specifier. The arguments  are  processed in the order they are given. An error will be p\
roduced if an insufficient number of arguments is passed.

.B Flag characters
.PP
Flag characters are not accommodated by this function.

.B The conversion specifier
.PP
A conversion specifier is a character that specifies the type of conversion to be applied. The conversion specifiers are:
.IP d,i
The int argument is converted to signed decimal notation.

.IP c
The int argument is converted to an unsigned char, and the resulting character is written.

.IP s
The const char * argument is expected to be a pointer to a string (an array of character type) Characters from the array are written up to a terminating null byte (but \
the '\0' is not incuded).

.IP %
% is written. Argument conversion does not occur. The conversion specification is '%%'

.SH NOTES
Not all edge cases will be accommodated by the _printf function.

.SH BUGS
No known bugs.

.SH AUTHORS
Steven Coyne and Joann Vuong
